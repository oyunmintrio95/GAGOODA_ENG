<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.gagooda_project.mapper.ReviewMapper">

    <resultMap id="reviewMap" type="ReviewDto" autoMapping="true">
        <result column="review_id" property="reviewId"/>
        <result column="user_id" property="userId"/>
        <result column="option_code" property="optionCode"/>
        <result column="product_code" property="productCode"/>
        <result column="reg_date" property="regDate"/>
        <result column="img_code" property="imgCode"/>
        <association property="user"
                     column="user_id"
                     select="com.example.gagooda_project.mapper.UserMapper.findById"
                     fetchType="lazy"/>
        <association property="optionProduct"
                     column="option_code"
                     select="com.example.gagooda_project.mapper.OptionProductMapper.findById"
                     fetchType="lazy"/>
        <association property="productDto"
                     column="product_code"
                     select="com.example.gagooda_project.mapper.ProductMapper.findById"
                     fetchType="lazy"/>
        <collection property="imgList"
                    column="img_code"
                    select="com.example.gagooda_project.mapper.ImageMapper.listByImgCode"
                    fetchType="lazy"/>

    </resultMap>
    <insert id="insertOne" parameterType="ReviewDto" useGeneratedKeys="true" keyProperty="reviewId">
        INSERT INTO review (user_id, option_code, product_code, rate, content, img_code)
        VALUES (#{userId}, #{optionCode}, #{productCode}, #{rate}, #{content}, #{imgCode})
    </insert>
    <update id="updateOne" parameterType="ReviewDto">
        UPDATE review
        SET rate=#{rate},
            content=#{content},
            img_code=#{imgCode}
        WHERE review_id = #{reviewId}
    </update>
    <delete id="deleteOne">
        DELETE
        FROM review
        WHERE review_id = #{id}
    </delete>
    <select id="listByProductCode" parameterType="String" resultMap="reviewMap">
        SELECT *
        FROM review
        WHERE product_code = #{productCode}
    </select>
    <!--    <select id="pageByProductId" parameterType="String" resultMap="reviewMap">-->
    <!--        SELECT * FROM review WHERE product_code= #{productCode} ORDER BY ${rate} DESC-->
    <!--    </select>-->
    <select id="listAll" resultMap="reviewMap">
        SELECT *
        FROM review
    </select>
    <!--    <select id="pageAll" resultMap="reviewMap">-->
    <!--        SELECT * FROM review ORDER BY #{regDate} DESC-->
    <!--    </select>-->
    <select id="findById" parameterType="Integer" resultMap="reviewMap">
        SELECT *
        FROM review
        WHERE review_id = #{id}
    </select>
    <select id="countByProductCode" resultType="java.lang.Integer">
        SELECT COUNT(*)
        from review
        WHERE product_code = #{productCode}
    </select>
    <select id="listByProductCodeAll" resultMap="reviewMap">
        SELECT *
        FROM review
        WHERE product_code = #{productCode}
    </select>
    <select id="pageAll" resultMap="reviewMap" parameterType="hashmap">
        SELECT * FROM review
        <where>
            <if test="searchWord != null and searchDiv != null and searchDiv !='' and searchWord != ''">
                AND ${searchDiv} LIKE #{searchWord}
            </if>
            <if test="dateType != null and startDate != null and endDate !=null and dateType !='' and startDate != '' and endDate !='' and !startDate.equals(endDate)">
                AND ${dateType} BETWEEN ${startDate} AND #{endDate}
            </if>
            <if test="dateType != null and startDate != null and endDate !=null and dateType !='' and startDate != '' and endDate !='' and startDate.equals(endDate)">
                AND ${dateType} LIKE #{startDate}
            </if>
            <if test="userId != '' and userId != null">
                AND user_id = #{userId}
            </if>
        </where>
        ORDER BY ${paging.orderField} ${paging.direct} LIMIT #{paging.startRow},#{paging.rows}
    </select>
    <select id="count" resultType="java.lang.Integer">
        SELECT count(*) FROM review
        <where>
            <if test="searchWord != null and searchDiv != null and searchDiv != '' and searchWord != ''">
                AND ${searchDiv} LIKE ${searchWord}
            </if>
            <if test="dateType != null and startDate != null and endDate != null and dateType !='' and startDate !='' and endDate !='' and !startDate.equals(endDate)">
                AND ${dateType} BETWEEN #{startDate} AND ${endDate}
            </if>
            <if test="dateType != null and startDate != null and endDate != null and dateType !='' and startDate !='' and endDate !='' and startDate.equals(endDate)">
                AND ${dateType} LIKE #{startDate}
            </if>
            <if test="userId != '' and userId != null">
                AND user_id = #{userId}
            </if>
        </where>
    </select>
</mapper>